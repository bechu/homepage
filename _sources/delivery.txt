===================
Structure du projet
===================

Le répertoire du projet se compose de la façon suivante :

.. code-block:: cpp

  ├── doc : ensembles des documentations et rapports du project
  │   └── sphinx
  │       └── Cette documentation
  ├── src
  │   ├── fusion_laserscan
  │   │   └── Noeud ROS permettant de fusionner deux messages de type LaserScan
  │   ├── kinav
  │   │   ├── flow
  │   │   │   └── ensemble de fichiers json décrivant un flow
  │   │   ├── launch
  │   │   │   └── ros launch file pour lancer des noeuds/nodelet de kinav
  │   │   ├── scripts
  │   │   │   └── quelques scripts utiles comme la calibration
  │   │   └── src
  │   │       ├── dataflow
  │   │       │   └── code source du flow de kinav
  │   │       ├── editor
  │   │       │   └── editeur de flow (basé sur SFML)
  │   │       ├── process
  │   │       │   └── process formant la libkinav
  │   │       ├── resource_manager
  │   │       │   └── code source permettant de charger/décharger des ressources
  │   │       ├── ros
  │   │       │   └── différents main : kinav_node, nodelet, editor, test, viz
  │   │       ├── structure
  │   │       │   └── structures communes aux logiciels
  │   │       ├── tests
  │   │       │   └── tests unitaires
  │   │       ├── utils
  │   │       │   └── quelques fonctions / classes utiles
  │   │       └── viz
  │   │           └── visualisateur du noeud kinav
  │   ├── kinav_launchfiles
  │   │   └── launch file permettant de lancer des apprentissages ou des relocalisations
  │   ├── kinav_msgs
  │   │   └── message spécifiques à kinav
  │   ├── testbed
  │   │   └── code source d'un site web permettant d'automatiser les tests
  │   └── turtlebot
  │       └── spécialisation du noeud turtlebot de ros : ajout des caméras RGB-D

Le répertoire doc, contient la documentation Sphinx.
Le répertoire src contient le code source du projet.

Dans src, plus particulièrement nous avons plusieurs code sources :
 * fusion_laserscan : Noeud ROS permettant de fusionner des lasers entre eux, permet également de corriger les déformations des lasers produits, à partir des caméras RGB-D en utilisant la méthode des moindres carrés.
 * kinav : Noeud ROS principal, contient divers livrables, tel que les noeuds permettant de se relocaliser.
 * kinav_msgs : Ensemble de messages ROS spécifique au projet kinav.
 * kinav_launchfiles : Ensemble de launch files permettant d'utiliser kinav.
 * testbed : Code source django permettant d'automatiser les tests.
 * turtlebot : Noeud ROS de description du robot (XAML).

La bibliothèque graphique utilisée pour le projet est SFML, elle est nécessaire pour la compilation.
Cependant *Kinav* peut tout à fait fonctionner sans elle.


